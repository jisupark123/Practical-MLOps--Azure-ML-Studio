name: Build a Docker container image packaging the ML model and push it to the Docker Hub registry.

on:
  push:
    branches: [main]

  # 깃허브의 Actions 탭에서 직접 실행할 수 있도록 허용
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Login to the Azure Container Registry
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure 확장 설치 및 사용자 입력 대기모드 방지 설정
        run: |
          az --version
          az config set extension.use_dynamic_install=yes_without_prompt
          az extension add -n ml

      - name: 모델 복원
        run: |
          az ml model download \
            --name RoBERTTa-SequenceClassification \
            --version 1 \
            --resource-group Practical-MLOps \
            --workspace-name ML_CI_CD \ 
            --download-path . && \
            mv RoBERTTa-SequenceClassification/* ./webapp/ && \
            rm -r RoBERTTa-SequenceClassification

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{secrets.GH_CONTAINER_REGISTRY}}

      - id: GH_REPOSITORY_OWNER
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository_owner }}

      - name: 컨테이너 빌드 후 도커 허브와 깃허브 레지스트리로 동시에 푸쉬
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{secrets.DOCKER_HUB_USERNAME}}/flask-docker-onnx-azure_x86:v1
            ghcr.io/${{steps.GH_REPOSITORY_OWNER.outputs.lowercase}}/flask-docker-onnx-azure_x86:v1
